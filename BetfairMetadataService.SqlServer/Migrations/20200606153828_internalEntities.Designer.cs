// <auto-generated />
using System;
using BetfairMetadataService.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BetfairMetadataService.SqlServer.Migrations
{
    [DbContext(typeof(BetfairMetadataServiceContext))]
    [Migration("20200606153828_internalEntities")]
    partial class internalEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BetfairMetadataService.Domain.FetchRoots.CompetitionMarketType", b =>
                {
                    b.Property<int>("DataProviderId")
                        .HasColumnType("int");

                    b.Property<string>("CompetitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MarketType")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DataProviderId", "CompetitionId", "MarketType");

                    b.ToTable("CompetitionMarketTypeFetchRoots");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.FetchRoots.EventTypeMarketType", b =>
                {
                    b.Property<int>("DataProviderId")
                        .HasColumnType("int");

                    b.Property<string>("EventTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MarketType")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DataProviderId", "EventTypeId", "MarketType");

                    b.ToTable("EventTypeMarketTypeFetchRoots");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Competition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.DataProvider", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataProviders");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.EventType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Market", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BettingType")
                        .HasColumnType("int");

                    b.Property<bool?>("BspMarket")
                        .HasColumnType("bit");

                    b.Property<string>("Clarifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DiscountAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("MarketBaseRate")
                        .HasColumnType("float");

                    b.Property<bool?>("MarketDataDelayed")
                        .HasColumnType("bit");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MarketTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PersistenceEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Regulator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RulesHasDate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SettleTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SuspendTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalMatched")
                        .HasColumnType("float");

                    b.Property<bool?>("TurnInPlayEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Wallet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Selection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Handicap")
                        .HasColumnType("float");

                    b.Property<string>("MarketId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RunnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortPriority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("Selections");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Market", b =>
                {
                    b.HasOne("BetfairMetadataService.Domain.Internal.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("BetfairMetadataService.Domain.Internal.Selection", b =>
                {
                    b.HasOne("BetfairMetadataService.Domain.Internal.Market", "Market")
                        .WithMany("Runners")
                        .HasForeignKey("MarketId");
                });
#pragma warning restore 612, 618
        }
    }
}
